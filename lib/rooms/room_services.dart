import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

// ... —Ç–≤–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π RoomService

class RoomService {
  static final _db = FirebaseFirestore.instance;
  static final _auth = FirebaseAuth.instance;

  static Future<User> _ensureUser() async {
    final u = _auth.currentUser;
    if (u != null) return u;
    return (await _auth.signInAnonymously()).user!;
  }

  // üëâ –≤—ã–∑—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–∏–ª –∏–≥—Ä—É
  static Future<void> submitResult({
    required String roomId,
    required int score,
    required int total,
    String? displayName,
  }) async {
    final user = await _ensureUser();
    final memRef = _db
        .collection('rooms')
        .doc(roomId)
        .collection('members')
        .doc(user.uid);
    await memRef.set({
      if (displayName != null && displayName.isNotEmpty) 'name': displayName,
      'score': score,
      'total': total,
      'finishedAt': FieldValue.serverTimestamp(),
    }, SetOptions(merge: true));

    // –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: —Ç—Ä–µ–∫–Ω—É—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    await _db.collection('rooms').doc(roomId).set({
      'lastResultAt': FieldValue.serverTimestamp(),
    }, SetOptions(merge: true));
  }
}
